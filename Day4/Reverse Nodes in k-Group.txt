https://leetcode.com/problems/reverse-nodes-in-k-group/

class Solution {
public:
    int findLen(ListNode* head) {
        int len = 0;
        ListNode* temp = head;
        while(temp != NULL) {
            len++;
            temp = temp->next;
        }
        return len;
    }
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head == NULL) {
            return head;
        }
        if(head->next == NULL) return head;

        ListNode* prev = NULL;
        ListNode* curr = head;
        ListNode* nextNode = curr->next;
        int len = findLen(head);
        int pos = 0;
        if(len < k) {
            return head;
        }
        while(pos < k) {
            nextNode = curr->next;
            curr->next = prev;
            prev = curr;
            curr = nextNode;
            pos++;
        }
        ListNode* recAns = NULL;
        if(nextNode != NULL) {
            recAns = reverseKGroup(nextNode, k);
            head->next = recAns;
        }
        return prev;
    }
};